[{"content":"import { render, screen } from '@testing-library/react';\n\nfunction RoleExample() {\n  return (\n    <div>\n      <a href=\"/\">Link</a>\n      <button>Button</button>\n      <footer>Contentinfo</footer>\n      <h1>Heading</h1>\n      <header>Banner</header>\n      <img alt=\"description\" /> Img\n      <input type=\"checkbox\" /> Checkbox\n      <input type=\"number\" /> Spinbutton\n      <input type=\"radio\" /> Radio\n      <input type=\"text\" /> Textbox\n      <li>Listitem</li>\n      <ul>Listgroup</ul>\n    </div>\n  );\n  \nrender(<RoleExample />);\n}\n\ntest('can find elements by role', () => {\n  render(<RoleExample />);\n  const roles = [\n    'link',\n    'button',\n    'contentinfo',\n    'heading',\n    'banner',\n    'img',\n    'checkbox',\n    'spinbutton',\n    'radio',\n    'textbox',\n    'listitem',\n    'list',\n  ];\n  for (let role of roles) {\n    const el = screen.getByRole(role);\n    expect(el).toBeInTheDocument();\n  }\n});","type":"code","id":"iy74d"},{"content":"function AccessibleName() {\n  return (\n    <div>\n      <button>Submit</button>\n      <button>Cancel</button>\n    </div>\n  );\n}\nrender(<AccessibleName />);","type":"code","id":"09zrg"},{"content":"test('can select by accessible name', () => {\n  render(<AccessibleName />);\n  const submitButton = screen.getByRole('button', {\n    name: /submit/i,\n  });\n\n  const cancelButton = screen.getByRole('button', {\n    name: /cancel/i,\n  });\n\n  expect(submitButton).toBeInTheDocument();\n  expect(cancelButton).toBeInTheDocument();\n});","type":"code","id":"qyjbp"},{"content":"function MoreNames() {\n  return (\n    <div>\n      <label htmlFor=\"email\">Email</label>\n      <input id=\"email\" />\n\n      <label htmlFor=\"search\">Search</label>\n      <input id=\"search\" />\n    </div>\n  );\n}\nrender(<MoreNames />);","type":"code","id":"ba4s1"},{"content":"test('show an email and search input', () => {\n  render(<MoreNames />);\n  const emailInput = screen.getByRole('textbox', {\n    name: /email/i,\n  });\n\n  const searchInput = screen.getByRole('textbox', {\n    name: /search/i,\n  });\n\n  expect(emailInput).toBeInTheDocument();\n  expect(searchInput).toBeInTheDocument();\n});","type":"code","id":"6uvem"},{"content":"function IconButtons() {\n  return (\n    <div>\n      <button aria-label=\"sign in\">\n        <svg />\n      </button>\n      <button aria-label=\"sign out\">\n        <svg />\n      </button>\n    </div>\n  );\n}\nrender(<IconButtons />);","type":"code","id":"wjc93"},{"content":"test('bind elements based on labels', () => {\n  render(<IconButtons />);\n  const signInButton = screen.getByRole('button', {\n    name: /sign in/i,\n  });\n\n  const signOutButton = screen.getByRole('button', {\n    name: /sign out/i,\n  });\n\n  expect(signInButton).toBeInTheDocument();\n  expect(signOutButton).toBeInTheDocument();\n});","type":"code","id":"p7rh6"}]